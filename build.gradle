plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "org.sonarqube" version "2.8"
    id 'java'
}

group = 'com.codenotfound'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('springCloudVersion', "Greenwich.SR5")
}

repositories {
    mavenCentral()
}

dependencies {

    
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
    implementation 'org.springframework.cloud:spring-cloud-task-batch'

    implementation 'org.postgresql:postgresql'
    compile ('org.springframework.cloud:spring-cloud-starter-dataflow-server:2.1.0.RELEASE') {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-dataflow-platform-cloudfoundry'
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-dataflow-platform-kubernetes'
    }
    implementation ('com.fasterxml.jackson.dataformat:jackson-dataformat-xml') {
        exclude group: 'org.jayway.jsonpath', module: 'json-path'
        exclude group: 'net.minidev', module: 'json-smart'
    }
    implementation 'org.slf4j:slf4j-api'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.hsqldb:hsqldb'
    compile 'javax.xml.bind:jaxb-api:2.3.0'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

apply plugin: "jacoco"

jacoco {
    toolVersion = "0.8.2+"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.exclusions", "**/de/spark/mail/config/*,**/MailServiceApplication.java"
    }
}
